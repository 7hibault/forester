= Introduction =

Under development!

Documentation, tutorial, and examples for [http://www.phylosoft.org/forester/ forester].

Author: [http://www.cmzmasek.net/ Christian M Zmasek], Sanford-Burnham Medical Research Institute

 
Copyright (C) 2011 Christian M Zmasek. All rights reserved.



= Parsing of phylogenetic trees and displaying them with Archaeopteryx =

This needs file "forester.jar" to be in the class-path.

{{{

package examples;

import java.io.File;
import java.io.IOException;

import org.forester.archaeopteryx.Archaeopteryx;
import org.forester.io.parsers.PhylogenyParser;
import org.forester.phylogeny.Phylogeny;
import org.forester.util.ForesterUtil;

public class Example1 {

    public static void main( final String[] args ) {
        // Reads in (a) tree(s) from a file.
        final File treefile = new File( "/path/to/tree.xml" );
        PhylogenyParser parser = null;
        try {
            parser = ForesterUtil.createParserDependingOnFileType( treefile, true );
        }
        catch ( final IOException e ) {
            e.printStackTrace();
        }
        Phylogeny[] phys = null;
        try {
            phys = ForesterUtil.readPhylogenies( parser, treefile );
        }
        catch ( final IOException e ) {
            e.printStackTrace();
        }
        // Display of the tree(s) with Archaeopteryx.
        Archaeopteryx.createApplication( phys );
    }
}

}}}




= Creating a new tree and displaying it with Archaeopteryx =

This needs file "forester.jar" to be in the class-path.

{{{

package examples;

import org.forester.archaeopteryx.Archaeopteryx;
import org.forester.phylogeny.Phylogeny;
import org.forester.phylogeny.PhylogenyNode;

public class Example2 {

    public static void main( final String[] args ) {
        // Creating a new rooted tree with two external nodes.
        final Phylogeny phy = new Phylogeny();
        final PhylogenyNode root = new PhylogenyNode();
        final PhylogenyNode d1 = new PhylogenyNode();
        final PhylogenyNode d2 = new PhylogenyNode();
        root.setName( "root" );
        d1.setName( "descendant 1" );
        d2.setName( "descendant 2" );
        root.addAsChild( d1 );
        root.addAsChild( d2 );
        phy.setRoot( root );
        phy.setRooted( true );
        // Displaying the newly created tree with Archaeopteryx.
        Archaeopteryx.createApplication( phy );
    }
}

}}}